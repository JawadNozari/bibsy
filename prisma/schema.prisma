generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// the blew code is used as an example

model User {
  id       Int             @id @default(autoincrement())
  admin    Boolean         @default(false)
  password String?
  name     String?
  email    String          @unique
  phone    String          @unique @db.VarChar(13)
  image    String          @db.VarChar(255)
  missing  missingBooks[]
  borrowed borrowedBooks[]
  returned returnedBooks[]
}

model Book {
  id        Int             @id @default(autoincrement())
  title     String?
  author    String?
  published DateTime        @default(now())
  regDate   DateTime        @default(now())
  isbn      String?
  invNr     Int             
  available Boolean         @default(true)
  missing   missingBooks[]
  borrowed  borrowedBooks[]
  returned  returnedBooks[]
}

model missingBooks {
  id      Int      @id @default(autoincrement())
  regDate DateTime @default(now())
  note    String   @db.VarChar(255)
  Book    Book?    @relation(fields: [bookId], references: [id])
  bookId  Int?
  User    User?    @relation(fields: [userId], references: [id])
  userId  Int?
}

model borrowedBooks {
  id      Int      @id @default(autoincrement())
  regDate DateTime @default(now())
  note    String   @db.VarChar(255)
  Book    Book?    @relation(fields: [bookId], references: [id])
  bookId  Int?
  User    User?    @relation(fields: [userId], references: [id])
  userId  Int?
}

model returnedBooks {
  id      Int      @id @default(autoincrement())
  regDate DateTime @default(now())
  Book    Book?    @relation(fields: [bookId], references: [id])
  bookId  Int?
  User    User?    @relation(fields: [userId], references: [id])
  userId  Int?
}
